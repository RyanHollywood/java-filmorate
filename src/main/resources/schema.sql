CREATE TABLE IF NOT EXISTS USERS (
    ID BIGINT NOT NULL,
    EMAIL VARCHAR(255) NOT NULL,
    LOGIN VARCHAR(50) NOT NULL,
    NAME VARCHAR(50) NOT NULL,
    BIRTHDAY DATE NOT NULL,
    PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS FRIENDS_STATUS (
    ID INTEGER NOT NULL,
    STATUS VARCHAR(255) NOT NULL,
    PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS FRIENDS (
    REQUEST BIGINT NOT NULL,
    RESPONCE BIGINT NOT NULL,
    STATUS INTEGER NOT NULL,
    PRIMARY KEY(REQUEST, RESPONCE),
    FOREIGN KEY(REQUEST) REFERENCES USERS(ID),
    FOREIGN KEY(RESPONCE) REFERENCES USERS(ID),
    FOREIGN KEY(STATUS) REFERENCES FRIENDS_STATUS(ID)
);


CREATE TABLE IF NOT EXISTS MPA (
    ID INTEGER NOT NULL,
    RATING VARCHAR(255) NOT NULL,
    PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS GENRES (
    ID INTEGER NOT NULL,
    GENRE VARCHAR(255),
    PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS FILMS (
    ID BIGINT NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(200) NOT NULL,
    RELEASE_DATE DATE NOT NULL,
    DURATION INTERVAL SECOND(18) NOT NULL,
    MPA INTEGER NOT NULL,
    FILM_GENRES_ID INTEGER NOT NULL ,
    PRIMARY KEY(ID),
    FOREIGN KEY(MPA) REFERENCES MPA(ID)
);


CREATE TABLE IF NOT EXISTS FILM_GENRES (
    FILM_ID  INT NOT NULL,
    GENRE_ID INT NOT NULL,
    PRIMARY KEY (FILM_ID, GENRE_ID),
    FOREIGN KEY (FILM_ID) REFERENCES FILMS (ID),
    FOREIGN KEY (GENRE_ID) REFERENCES GENRES (ID)
);


CREATE TABLE IF NOT EXISTS LIKES (
    USER_ID BIGINT NOT NULL,
    FILM_ID BIGINT NOT NULL,
    PRIMARY KEY(USER_ID, FILM_ID),
    FOREIGN KEY(USER_ID) REFERENCES USERS(ID),
    FOREIGN KEY(FILM_ID) REFERENCES FILMS(ID)
);